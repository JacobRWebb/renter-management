generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  TENANT
  WORKER
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String

  name           Name                   @relation(fields: [nameId], references: [id])
  roles          Role[]
  stripeUserId   StripeToUser           @relation(fields: [stripeToUserId], references: [id])
  paymentIntents PaymentIntentsToUser[]

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  nameId         String   @unique
  stripeToUserId String   @unique
}

model Name {
  id            String @id @default(cuid())
  firstName     String
  middleInitial String
  lastName      String
  User          User?
}

model StripeToUser {
  id       String @id @default(cuid())
  stripeId String @unique
  User     User?
}

model PaymentIntentsToUser {
  id       String  @id @default(cuid())
  stripeId String  @unique
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

//   ownedProperty  Property[] @relation("OwnedBy")
//   rentedProperty Property[] @relation("RentedBy")
//   workedProperty Property[] @relation("WorkedBy")
// }

// model Property {
//   id          String   @id @default(cuid())
//   name        String
//   description String
//   address     String
//   city        String
//   state       String
//   zip         String
//   owner       User     @relation(name: "OwnedBy", fields: [ownerId], references: [id])
//   ownerId     String
//   rentedBy    User[]   @relation(name: "RentedBy")
//   workedBy    User[]   @relation(name: "WorkedBy")
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// enum PropertyVacancy {
//   VACANT
//   OCCUPIED
// }

// enum PropertyType {
//   HOUSE
//   COMMERCIAL
//   APARTMENT
//   CONDO
//   TOWNHOUSE
//   LAND
//   OTHER
// }
